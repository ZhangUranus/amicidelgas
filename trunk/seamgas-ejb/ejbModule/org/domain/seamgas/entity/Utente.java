package org.domain.seamgas.entity;

// Generated 1-feb-2009 18.05.54 by Hibernate Tools 3.2.2.GA

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import org.hibernate.validator.Length;
import org.hibernate.validator.NotNull;

/**
 * Utente generated by hbm2java
 */
@Entity
@Table(name = "utente", catalog = "seam")
public class Utente implements java.io.Serializable {

	private String codiceFiscale;
	private Account account;
	private Comune comune;
	private String nome;
	private String cognome;
	private Date dataNascita;
	private String luogoNascita;
	private byte sesso;
	private String pathQuestionario;
	private String indirizzo;
	private String recapitoTelefonico;
	private String email;
	private Set<Patente> patentes = new HashSet<Patente>(0);

	public Utente() {
	}

	public Utente(String codiceFiscale, Account account, Comune comune,
			String nome, String cognome, Date dataNascita, String luogoNascita,
			byte sesso, String pathQuestionario, String indirizzo,
			String recapitoTelefonico, String email) {
		this.codiceFiscale = codiceFiscale;
		this.account = account;
		this.comune = comune;
		this.nome = nome;
		this.cognome = cognome;
		this.dataNascita = dataNascita;
		this.luogoNascita = luogoNascita;
		this.sesso = sesso;
		this.pathQuestionario = pathQuestionario;
		this.indirizzo = indirizzo;
		this.recapitoTelefonico = recapitoTelefonico;
		this.email = email;
	}

	public Utente(String codiceFiscale, Account account, Comune comune,
			String nome, String cognome, Date dataNascita, String luogoNascita,
			byte sesso, String pathQuestionario, String indirizzo,
			String recapitoTelefonico, String email, Set<Patente> patentes) {
		this.codiceFiscale = codiceFiscale;
		this.account = account;
		this.comune = comune;
		this.nome = nome;
		this.cognome = cognome;
		this.dataNascita = dataNascita;
		this.luogoNascita = luogoNascita;
		this.sesso = sesso;
		this.pathQuestionario = pathQuestionario;
		this.indirizzo = indirizzo;
		this.recapitoTelefonico = recapitoTelefonico;
		this.email = email;
		this.patentes = patentes;
	}

	@Id
	@Column(name = "CodiceFiscale", unique = true, nullable = false, length = 16)
	@NotNull
	@Length(max = 16)
	public String getCodiceFiscale() {
		return this.codiceFiscale;
	}

	public void setCodiceFiscale(String codiceFiscale) {
		this.codiceFiscale = codiceFiscale;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "Username", nullable = false)
	@NotNull
	public Account getAccount() {
		return this.account;
	}

	public void setAccount(Account account) {
		this.account = account;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "IDComune", nullable = false)
	@NotNull
	public Comune getComune() {
		return this.comune;
	}

	public void setComune(Comune comune) {
		this.comune = comune;
	}

	@Column(name = "Nome", nullable = false, length = 50)
	@NotNull
	@Length(max = 50)
	public String getNome() {
		return this.nome;
	}

	public void setNome(String nome) {
		this.nome = nome;
	}

	@Column(name = "Cognome", nullable = false, length = 50)
	@NotNull
	@Length(max = 50)
	public String getCognome() {
		return this.cognome;
	}

	public void setCognome(String cognome) {
		this.cognome = cognome;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "DataNascita", nullable = false, length = 10)
	@NotNull
	public Date getDataNascita() {
		return this.dataNascita;
	}

	public void setDataNascita(Date dataNascita) {
		this.dataNascita = dataNascita;
	}

	@Column(name = "LuogoNascita", nullable = false, length = 50)
	@NotNull
	@Length(max = 50)
	public String getLuogoNascita() {
		return this.luogoNascita;
	}

	public void setLuogoNascita(String luogoNascita) {
		this.luogoNascita = luogoNascita;
	}

	@Column(name = "Sesso", nullable = false)
	@NotNull
	public byte getSesso() {
		return this.sesso;
	}

	public void setSesso(byte sesso) {
		this.sesso = sesso;
	}

	@Column(name = "PathQuestionario", nullable = false, length = 500)
	@NotNull
	@Length(max = 500)
	public String getPathQuestionario() {
		return this.pathQuestionario;
	}

	public void setPathQuestionario(String pathQuestionario) {
		this.pathQuestionario = pathQuestionario;
	}

	@Column(name = "Indirizzo", nullable = false, length = 100)
	@NotNull
	@Length(max = 100)
	public String getIndirizzo() {
		return this.indirizzo;
	}

	public void setIndirizzo(String indirizzo) {
		this.indirizzo = indirizzo;
	}

	@Column(name = "RecapitoTelefonico", nullable = false, length = 45)
	@NotNull
	@Length(max = 45)
	public String getRecapitoTelefonico() {
		return this.recapitoTelefonico;
	}

	public void setRecapitoTelefonico(String recapitoTelefonico) {
		this.recapitoTelefonico = recapitoTelefonico;
	}

	@Column(name = "email", nullable = false, length = 70)
	@NotNull
	@Length(max = 70)
	public String getEmail() {
		return this.email;
	}

	public void setEmail(String email) {
		this.email = email;
	}

	@OneToMany(cascade = CascadeType.ALL, fetch = FetchType.LAZY, mappedBy = "utente")
	public Set<Patente> getPatentes() {
		return this.patentes;
	}

	public void setPatentes(Set<Patente> patentes) {
		this.patentes = patentes;
	}

}
