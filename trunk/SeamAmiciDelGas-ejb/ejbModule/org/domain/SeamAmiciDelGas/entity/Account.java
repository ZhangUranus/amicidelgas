package org.domain.SeamAmiciDelGas.entity;

// Generated 6-feb-2009 11.41.06 by Hibernate Tools 3.2.2.GA

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import org.hibernate.validator.Length;
import org.hibernate.validator.NotNull;

/**
 * Account generated by hbm2java
 */
@Entity
@Table(name = "Account", catalog = "database_gas")
public class Account implements java.io.Serializable {

	private String username;
	private String pass;
	private boolean bloccato;
	private boolean elimato;
	private boolean cancellato;
	private boolean attivato;
	private Date dataRichiesta;
	private Date dataAccettazione;
	private int punteggioFeedback;
	private Set<Questionario> questionarios = new HashSet<Questionario>(0);

	public Account() {
	}

	public Account(String username, String pass, boolean bloccato,
			boolean elimato, boolean cancellato, boolean attivato,
			Date dataRichiesta, int punteggioFeedback) {
		this.username = username;
		this.pass = pass;
		this.bloccato = bloccato;
		this.elimato = elimato;
		this.cancellato = cancellato;
		this.attivato = attivato;
		this.dataRichiesta = dataRichiesta;
		this.punteggioFeedback = punteggioFeedback;
	}

	public Account(String username, String pass, boolean bloccato,
			boolean elimato, boolean cancellato, boolean attivato,
			Date dataRichiesta, Date dataAccettazione, int punteggioFeedback,
			Set<Questionario> questionarios) {
		this.username = username;
		this.pass = pass;
		this.bloccato = bloccato;
		this.elimato = elimato;
		this.cancellato = cancellato;
		this.attivato = attivato;
		this.dataRichiesta = dataRichiesta;
		this.dataAccettazione = dataAccettazione;
		this.punteggioFeedback = punteggioFeedback;
		this.questionarios = questionarios;
	}

	@Id
	@Column(name = "Username", unique = true, nullable = false, length = 20)
	@NotNull
	@Length(max = 20)
	public String getUsername() {
		return this.username;
	}

	public void setUsername(String username) {
		this.username = username;
	}

	@Column(name = "Pass", nullable = false, length = 32)
	@NotNull
	@Length(max = 32)
	public String getPass() {
		return this.pass;
	}

	public void setPass(String pass) {
		this.pass = pass;
	}

	@Column(name = "Bloccato", nullable = false)
	@NotNull
	public boolean isBloccato() {
		return this.bloccato;
	}

	public void setBloccato(boolean bloccato) {
		this.bloccato = bloccato;
	}

	@Column(name = "Elimato", nullable = false)
	@NotNull
	public boolean isElimato() {
		return this.elimato;
	}

	public void setElimato(boolean elimato) {
		this.elimato = elimato;
	}

	@Column(name = "Cancellato", nullable = false)
	@NotNull
	public boolean isCancellato() {
		return this.cancellato;
	}

	public void setCancellato(boolean cancellato) {
		this.cancellato = cancellato;
	}

	@Column(name = "Attivato", nullable = false)
	@NotNull
	public boolean isAttivato() {
		return this.attivato;
	}

	public void setAttivato(boolean attivato) {
		this.attivato = attivato;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "DataRichiesta", nullable = false, length = 0)
	@NotNull
	public Date getDataRichiesta() {
		return this.dataRichiesta;
	}

	public void setDataRichiesta(Date dataRichiesta) {
		this.dataRichiesta = dataRichiesta;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "DataAccettazione", length = 0)
	public Date getDataAccettazione() {
		return this.dataAccettazione;
	}

	public void setDataAccettazione(Date dataAccettazione) {
		this.dataAccettazione = dataAccettazione;
	}

	@Column(name = "PunteggioFeedback", nullable = false)
	@NotNull
	public int getPunteggioFeedback() {
		return this.punteggioFeedback;
	}

	public void setPunteggioFeedback(int punteggioFeedback) {
		this.punteggioFeedback = punteggioFeedback;
	}

	@OneToMany(cascade = CascadeType.ALL, fetch = FetchType.LAZY, mappedBy = "account")
	public Set<Questionario> getQuestionarios() {
		return this.questionarios;
	}

	public void setQuestionarios(Set<Questionario> questionarios) {
		this.questionarios = questionarios;
	}

}
